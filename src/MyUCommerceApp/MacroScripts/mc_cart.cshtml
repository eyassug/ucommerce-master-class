@inherits umbraco.MacroEngines.DynamicNodeContext
@using UCommerce.Api
@using UCommerce

@{
	var basket = TransactionLibrary.GetBasket().PurchaseOrder;
	if (IsPost) {
		var loopyOrderLines = basket.OrderLines.ToList();
		foreach (var orderLine in loopyOrderLines) 
		{
			int qty = Convert.ToInt32(Request.Form["quantityInput_" + orderLine.OrderLineId]);
			if (Request.Form["removeButton_"+orderLine.OrderLineId] != null) {
				qty = 0;
			}
			
			TransactionLibrary.UpdateLineItem(orderLine.OrderLineId,qty);
		}
		
		TransactionLibrary.ExecuteBasketPipeline();
	}
}

@{
	var orderTotal = new Money(basket.OrderTotal.Value, basket.BillingCurrency);
}

<form method="POST">
<table>
	<tr>
		<th>SKU</th>
		<th></th>
		<th>Quantity</th>
		<th>LineTotal</th>
		<th>Remove product</th>
	</tr>
	@foreach (var orderLine in basket.OrderLines) {
		var lineTotal = new Money(orderLine.Total.Value,basket.BillingCurrency);	
		<tr>
			<td>@orderLine.Sku</td>
			<td>@orderLine.ProductName</td>
			<td><input type="text" value="@orderLine.Quantity" name="quantityInput_@orderLine.OrderLineId" /></td>
			<td>@lineTotal</td>
			<td><input type="submit" value="x" name="removeButton_@orderLine.OrderLineId" /></td>
		</tr>
	}
	<tr>
		<td colspan="3">order total</td>
		<td>@orderTotal</td>
	</tr>
</table>
		
<input type="submit" name="submitChanges" value="Update" />
</form>
		
<a href="/address">Proceed</a>
		
		
		