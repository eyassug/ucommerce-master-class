<!--
	Core configuration for uCommerce components.
-->
<configuration>
	<components>

		<!-- Data Access -->
		<component
			id="SessionProvider"
			service="UCommerce.EntitiesV2.ISessionProvider, UCommerce"
			type="UCommerce.EntitiesV2.SessionProvider, UCommerce"/>

		<component
			id="UCommerce.CoreDataMappings"
			service="UCommerce.EntitiesV2.IContainsNHibernateMappingsTag, UCommerce"
			type="UCommerce.EntitiesV2.MappingAssemblyTag, UCommerce"/>

		<component
			id="Repository"
			service="UCommerce.EntitiesV2.IRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.Repository`1, UCommerce"/>

		<component
			id="SoftDeletableRepository"
			service="UCommerce.EntitiesV2.ISoftDeletableRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.SoftDeletableRepository`1, UCommerce"/>

		<!-- Internal libraries-->
		<component
			id="CatalogLibraryInternal"
			service="UCommerce.Catalog.CatalogLibraryInternal, UCommerce"
			type="UCommerce.Catalog.CatalogLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="MarketingLibraryInternal"
			service="UCommerce.Marketing.MarketingLibraryInternal, UCommerce"
			type="UCommerce.Marketing.MarketingLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="TransactionLibraryInternal"
			service="UCommerce.Transactions.TransactionLibraryInternal, UCommerce"
			type="UCommerce.Transactions.TransactionLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="SearchLibraryInternal"
			service="UCommerce.Search.SearchLibraryInternal, UCommerce"
			type="UCommerce.Search.SearchLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="LibraryImpl"
			service="UCommerce.Xslt.LibraryImpl, UCommerce"
			type="UCommerce.Xslt.LibraryImpl, UCommerce"/>

		<!-- Interceptors -->
		<component
			id="ExceptionLoggingInterceptor"
			service="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"/>

		<component
			id="XmlExceptionInterceptor"
			service="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce"
			type="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce"/>

		<!-- Context API -->
		<component
			id="SiteContext"
			service="UCommerce.Runtime.ISiteContext, UCommerce"
			type="UCommerce.Runtime.SiteContext, UCommerce"/>

		<component
			id="CatalogContext"
			service="UCommerce.Runtime.ICatalogContext, UCommerce"
			type="UCommerce.Runtime.CatalogContext, UCommerce"/>

		<component
			id="OrderContext"
			service="UCommerce.Runtime.IOrderContext, UCommerce"
			type="UCommerce.Runtime.OrderContext, UCommerce"/>

		<component
			id="LocalizationContext"
			service="UCommerce.Infrastructure.Globalization.ILocalizationContext, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Globalization.Globalization, UCommerce.Infrastructure"/>

		<component
			id="ClientContext"
			service="UCommerce.Xslt.IClientContext, UCommerce"
			type="UCommerce.Xslt.ClientContext, UCommerce"/>

		<!-- Services -->
		<component
			id="OrderService"
			service="UCommerce.Transactions.IOrderService, UCommerce"
			type="UCommerce.Transactions.OrderService, UCommerce"/>

		<component
			id="PriceService"
			service="UCommerce.Catalog.IPricingService, UCommerce"
			type="UCommerce.Catalog.PricingService, UCommerce"/>

		<component
			id="TaxService"
			service="UCommerce.Catalog.ITaxService, UCommerce"
			type="UCommerce.Catalog.TaxService, UCommerce"/>

		<component
			id="UrlService"
			service="UCommerce.Catalog.IUrlService, UCommerce"
			type="UCommerce.Catalog.UrlService, UCommerce"/>

		<component
			id="ProductReviewService"
			service="UCommerce.Catalog.ProductReviewService, UCommerce"
			type="UCommerce.Catalog.ProductReviewService, UCommerce"/>

		<component
			id="CheckoutService"
			service="UCommerce.Transactions.CheckoutService, UCommerce"
			type="UCommerce.Transactions.CheckoutService, UCommerce"/>

		<component
			id="EmailService"
			service="UCommerce.Transactions.IEmailService, UCommerce"
			type="UCommerce.Transactions.EmailService, UCommerce"/>

		<component
		  id="NumberSeriesService"
		  service ="UCommerce.Transactions.INumberSeriesService, UCommerce"
		  type="UCommerce.Transactions.NumberSeriesService, UCommerce"/>

		<component
	id="AbsoluteUrlService"
	service="UCommerce.Web.IAbsoluteUrlService, UCommerce"
	type="UCommerce.Web.Impl.AbsoluteUrlService, UCommerce">
			<parameters>
				<includeLanguage>False</includeLanguage>
				<includePort>False</includePort>
			</parameters>
		</component>

		<!-- Infrastructure -->
		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		<!-- Shell services -->
		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		<component
			id="DefaultUrlConverter"
			service="UCommerce.Tree.ITreeNodeTypeToUrlConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeTypeToUrlConverter, UCommerce" />

		<component
			id="DefaultOptionConverter"
			service="UCommerce.Tree.ITreeNodeOptionToOptionItemConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeOptionToOptionItemConverter, UCommerce" />

		

		<component
			id="CatalogTreeService"
			service="UCommerce.Tree.ITreeContentService, UCommerce"
			type="UCommerce.Tree.Impl.TreeContentService, UCommerce">
			<parameters>
				<contentProviders>
					<list type="UCommerce.Tree.ITreeContentProvider, UCommerce">
						<item>${DefaultShellCatalogSectionProvider}</item>
					</list>
				</contentProviders>
			</parameters>
		</component>

		<component
			id="CatalogProductTreeService"
			service="UCommerce.Tree.ITreeContentService, UCommerce"
			type="UCommerce.Tree.Impl.TreeContentService, UCommerce">
			<parameters>
				<contentProviders>
					<list type="UCommerce.Tree.ITreeContentProvider, UCommerce">
						<item>${DefaultCatalogSectionProvider}</item>
						<item>${DefaultProductSectionProvider}</item>
					</list>
				</contentProviders>
			</parameters>
		</component>

		<component 
			id="TreeNodesListProviderFactory" 
			service="UCommerce.Tree.ITreeNodesListProviderFactory, UCommerce"
			type="UCommerce.Tree.Impl.Providers.TreeNodesListProviderFactory, UCommerce" />

		<component 
			id="ProductTreeNodesListProvider" 
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.ProductTreeNodesListProvider, UCommerce" />
		
		<component 
			id="CategoriesTreeNodesListProvider" 
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.CategoriesTreeNodesListProvider, UCommerce" />

		<!-- Other -->
		<component
			id="SectionBuilder"
			service="UCommerce.Presentation.Web.Pages.ITabViewBuilder, UCommerce.Presentation"
			type="UCommerce.Presentation.Web.Pages.TabViewBuilder, UCommerce.Presentation" />

		<component
			id="ResourceManager"
			service="UCommerce.Infrastructure.Globalization.IResourceManager, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Globalization.GlobalResourceManager, UCommerce.Infrastructure" />

		<!--- Security -->
		<component
			id="RoleService"
			service="UCommerce.Security.IRoleService, UCommerce"
			type="UCommerce.Security.RoleService, UCommerce"/>

		<component
				id="EnsureRolesService"
				service="UCommerce.Security.IEnsureRolesAreUpToDateService, UCommerce"
				type="UCommerce.Security.EnsureRolesAreUpToDateService, UCommerce"/>

		<component
				id="SecurityService"
				service="UCommerce.Security.ISecurityService, UCommerce"
				type="UCommerce.Security.SecurityService, UCommerce"/>
	</components>
</configuration>